[{"id":"b17cfe320b792f7a8a70851eed21c5c9","title":"python通过将py文件转为so实现代码加密","content":"这里介绍一种通过将 .py 代码转为.so文件来做到某种意义上的加密的方法前提提醒： 不同的操作系统环境中转so后只能在其相同的环境内执行，无法实现跨平台可用\n1.单个文件转so：把guaner.py文件转为so在guaner.py的同级目录下新建一个setup.py（名称可以自己定义，不一定要用setup.py命名）文件，文件的内容如下：\nfrom distutils.core import setup\nfrom Cython.Build import cythonize\nsetup(ext_modules = cythonize([&quot;guaner.py&quot;]))\n\n然后执行以下命令进行转so\npython setup.py build_ext\n\n示例：创建完成后目录结构如下\n.\n├── __init__.py\n├── guaner.py\n└── setup.py\n​\n0 directories, 3 files\n\n然后执行命令开始转so\n.\n├── __init__.py\n├── build\n│   ├── lib.macosx-10.9-x86_64-3.10\n│   │   └── test\n│   │       └── jiami\n│   │           └── guaner.cpython-310-darwin.so\n│   └── temp.macosx-10.9-x86_64-3.10\n│       └── guaner.o\n├── guaner.c\n├── guaner.py\n└── setup.py\n\n生成的so文件在build目录下，找到guaner.cpython-310-darwin.so就是转so后的文件了\n重点提醒： __init__.py文件对转so的影响\n注意看到，为什么多了一个jiami目录？首先看下我完整的文件目录结构：\ntest\n├── __init__.py\n├── jiami\n│   ├── guaner.py\n│   └── setup.py\n\n这是我完整的目录结构，里面有个很关键的文件，test目录下有__init__.py，jiami目录下也有__init__.py，在转so文件的时候，因为python代码结构中，如果目录中存在__init__.py，会把当前这个目录当作一个包，模块，可以被其他目录下代码引用，所以转so的时候，会顺着__init__.py所在的包结构，一层层的往上找，直到最后非python模块的目录为止\n因此打包完成后的目录结构就是这样的结构了：\n.\n├── __init__.py\n├── build\n│   ├── lib.macosx-10.9-x86_64-3.10\n│   │   └── test\n│   │       └── jiami\n│   │           └── guaner.cpython-310-darwin.so\n│   └── temp.macosx-10.9-x86_64-3.10\n│       └── guaner.o\n├── guaner.c\n├── guaner.py\n└── setup.py\n\n现在去掉__init__.py再打包看看结果jiami\n├── guaner.py\n└── setup.py\n\n执行python setup.py build_ext得到so文件目录如下\njiami\n├── build\n│   ├── lib.macosx-10.9-x86_64-3.10\n│   │   └── guaner.cpython-310-darwin.so\n│   └── temp.macosx-10.9-x86_64-3.10\n│       └── guaner.o\n├── guaner.c\n├── guaner.py\n└── setup.py\n\n这样看，代码是不是就很符合自己的期望了，这样把文件so文件分发到相同操作系统环境后，就可以放心执行不用担心别人可以查看我们的源代码了\n现在我们可以做到单个文件转位so了，那么我们是不是可以把当前的python项目整体的所有代码全部转位so文件了，这样发布给用户的时候，也不用担心看到我们的源代码了，下一章开始介绍打包整个python项目","slug":"python通过将py文件转为so实现代码加密","date":"2023-08-18T16:21:34.000Z","categories_index":"python","tags_index":"python","author_index":"小禅又小禅"},{"id":"eb5f4bc5c6b0be6986881b7a1cd7ad24","title":"小铲","content":"小铲\n","slug":"小铲","date":"2023-07-30T14:14:54.000Z","categories_index":"应用","tags_index":"密码本","author_index":"小禅又小禅"},{"id":"765c237e6edd8430fb074fe1ddc29da2","title":"小铲使用说明","content":"小铲子\n","slug":"小铲使用说明","date":"2023-07-30T12:52:51.000Z","categories_index":"应用","tags_index":"密码本","author_index":"小禅又小禅"},{"id":"b545058e412a8c355d0fc0acd5583c4c","title":"应用下载","content":"应用下载1. 神兽密码本下载https://gitee.com/sunspace/shenshoumima/releases/tag/V1.3.2\n","slug":"应用下载","date":"2023-07-30T14:14:36.000Z","categories_index":"应用","tags_index":"密码本","author_index":"小禅又小禅"},{"id":"091d901a107acdab25635c2778679552","title":"安全产品大纲","content":"网络安全\n","slug":"安全产品大纲","date":"2023-07-30T12:59:51.000Z","categories_index":"安全","tags_index":"安全","author_index":"小禅又小禅"},{"id":"6c5d4d98f2b1ebf7f008562a78831f62","title":"神兽密码本","content":"神兽密码本1. 下载安装在应用下载界面下载应用程序\n2. 设置主密码点击设置主密码 设置主密码\n输入主密码 这个密码是最重要的！！后续所有的账号认证都需要用到这个密码来进行验证，同时也是密码在本地存储加密的钥匙\n设置完密码后就可以开始使用啦\n3. 新增系统及账号3.1 新增系统\n3.2 新增标签新增标签输入需要的标签后，回车即可！\n给系统设置标签\n3.2 给系统新增账号添加账号密码也可以点击生成一个新的密码选择密码组成，密码长度，点击生成，可以生产一个符合自己需要的密码，如果需要使用，则点击应用按钮，刚生成的密码就可以被应用了，然后点击保存即可可以看到已生成的密码\n","slug":"神兽密码本","date":"2023-07-30T12:50:49.000Z","categories_index":"应用","tags_index":"密码本","author_index":"小禅又小禅"}]