{"title":"python时间处理","uid":"d275443537d796e283f637e672cf7884","slug":"python时间处理","date":"2024-01-27T15:01:09.000Z","updated":"2024-01-30T14:30:40.756Z","comments":false,"path":"api/articles/python时间处理.json","keywords":null,"cover":"images/7753777_0_final.png","content":"<h1 id=\"Python处理时间的几种方式\"><a href=\"#Python处理时间的几种方式\" class=\"headerlink\" title=\"Python处理时间的几种方式\"></a>Python处理时间的几种方式</h1><h2 id=\"1-内置模块：time和datetime\"><a href=\"#1-内置模块：time和datetime\" class=\"headerlink\" title=\"1. 内置模块：time和datetime\"></a>1. 内置模块：time和datetime</h2><h3 id=\"1-1-time\"><a href=\"#1-1-time\" class=\"headerlink\" title=\"1.1 time\"></a>1.1 time</h3><p>官方地址：<a href=\"https://docs.python.org/zh-cn/3/library/time.html\">https://docs.python.org/zh-cn/3/library/time.html</a></p>\n<p>用的最多的几个方法<code>time.time()</code>,<code>time.sleep(secs)</code>,<code>time.strptime(string[, format])</code>，可以用来获取当前时间戳，程序等待几秒，时间格式转换等，还有其他的一些方法，不做太多介绍，可以参考官方文档了解</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import time\ntime.time()\n\n1706367977.4451728</code></pre>\n\n<h3 id=\"1-2-datetime\"><a href=\"#1-2-datetime\" class=\"headerlink\" title=\"1.2 datetime\"></a>1.2 datetime</h3><p>官方地址：<a href=\"https://docs.python.org/zh-cn/3/library/datetime.html\">https://docs.python.org/zh-cn/3/library/datetime.html</a></p>\n<p>这个模块用的就非常多了，包括时间获取、格式转换、时间操作（相加、相减）、时区等等，日常经常使用，参见官方文档</p>\n<h2 id=\"2-第三方组件库\"><a href=\"#2-第三方组件库\" class=\"headerlink\" title=\"2. 第三方组件库\"></a>2. 第三方组件库</h2><p>这是额外补充的部分（第三方组件库用起来真的很爽）</p>\n<h3 id=\"2-1-dateutil\"><a href=\"#2-1-dateutil\" class=\"headerlink\" title=\"2.1 dateutil\"></a>2.1 dateutil</h3><p>官方文档地址：<a href=\"https://dateutil.readthedocs.io/en/stable/\">https://dateutil.readthedocs.io/en/stable/</a></p>\n<p>如果你想要用来处理时间字符串转为时间格式的话，这个是真的很方便</p>\n<p>借用官方文档案例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&gt;&gt;&gt; from dateutil.parser import *\n&gt;&gt;&gt; from datetime import *\n&gt;&gt;&gt; now &#x3D; parse(&quot;2023-12-12 12:12:12&quot;)    # 这里提供时间格式字符串，直接帮你把时间字符串转为datetime时间格式</code></pre>\n\n<p>对比下如果用官方内置datetime模块来处理的话，同样一个时间字符串</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nfrom datetime import datetime\n\n_time &#x3D; datetime.strptime(&#39;2023-12-12 12:12:12&#39;, &#39;%Y-%m-%d %H:%M:%S&#39;)\nprint(_time)\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">datetime.datetime(2023, 12, 12, 12, 12, 12)</code></pre>\n\n<p>对比一下，如果你需要提供一个通用的方法，用来做时间字符串转为时间格式，用datetime来实现的话，就需要提供<code>format</code>表达式，要不然无法正常解析时间，如果时间字符串一直是固定的，那可以默认使用，如果多样的时间格式，那就需要多种适配。</p>\n<p>这个时候直接引入第三方写好的，可以直接使用了。</p>\n<p>之前遇到一个坑的时间格式处理：日志中的时间格式全部都是这种<code>2023-12-12T12:12:12.1234567Z</code>,<code>2023-12-12T12:12:12.12Z</code>，最后的浮点数长度是不定的，从1位到7位不等，这个时候用format就不好用了</p>\n<p>按时间格式来写应该是这样的：<code>%Y-%m-%dT%H:%M:%S.%fZ</code>，浮点数用<code>%f</code>来标志，但是python的<code>%f</code>只能表示<code>6位</code>，这里最多到7位，就导致时间格式部分能解析成功，部分解析失败，此时直接用<code>dateutil</code>就不用考虑format的问题了</p>\n<p>时间格式代码：<a href=\"https://docs.python.org/zh-cn/3/library/datetime.html#strftime-and-strptime-behavior\">https://docs.python.org/zh-cn/3/library/datetime.html#strftime-and-strptime-behavior</a></p>\n<p><img src=\"/../pimages/image-16.png\" alt=\"Alt text\"><br><img src=\"/../pimages/image-15.png\" alt=\"Alt text\"></p>\n<h2 id=\"3-其他开源时间相关的库\"><a href=\"#3-其他开源时间相关的库\" class=\"headerlink\" title=\"3. 其他开源时间相关的库\"></a>3. 其他开源时间相关的库</h2><h3 id=\"3-1-农历-阴历-转换-LunarSolarConverter\"><a href=\"#3-1-农历-阴历-转换-LunarSolarConverter\" class=\"headerlink\" title=\"3.1 农历(阴历)转换 LunarSolarConverter\"></a>3.1 农历(阴历)转换 LunarSolarConverter</h3><p>公历(阳历) 农历(阴历)转换，支持时间段从1900-2100 如果需要更长的时间段</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install LunarSolarConverter</code></pre>\n\n<h3 id=\"3-2-工作日历-workalendar\"><a href=\"#3-2-工作日历-workalendar\" class=\"headerlink\" title=\"3.2 工作日历 workalendar\"></a>3.2 工作日历 workalendar</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install workalendar</code></pre>\n\n<h3 id=\"3-3-中国法定节假日数据-holiday-cn\"><a href=\"#3-3-中国法定节假日数据-holiday-cn\" class=\"headerlink\" title=\"3.3 中国法定节假日数据 holiday-cn\"></a>3.3 中国法定节假日数据 holiday-cn</h3><p>中国法定节假日数据 自动每日抓取国务院公告</p>\n","feature":true,"text":"Python处理时间的几种方式1. 内置模块：time和datetime1.1 time官方地址：https://docs.python.org/zh-cn/3/library/time.html 用的最多的几个方法time.time(),time.sleep(secs),tim...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"python经验","slug":"python经验","count":3,"path":"api/tags/python经验.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Python%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Python处理时间的几种方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97%EF%BC%9Atime%E5%92%8Cdatetime\"><span class=\"toc-text\">1. 内置模块：time和datetime</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-1-time\"><span class=\"toc-text\">1.1 time</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-2-datetime\"><span class=\"toc-text\">1.2 datetime</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BB%84%E4%BB%B6%E5%BA%93\"><span class=\"toc-text\">2. 第三方组件库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-dateutil\"><span class=\"toc-text\">2.1 dateutil</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E5%85%B6%E4%BB%96%E5%BC%80%E6%BA%90%E6%97%B6%E9%97%B4%E7%9B%B8%E5%85%B3%E7%9A%84%E5%BA%93\"><span class=\"toc-text\">3. 其他开源时间相关的库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-1-%E5%86%9C%E5%8E%86-%E9%98%B4%E5%8E%86-%E8%BD%AC%E6%8D%A2-LunarSolarConverter\"><span class=\"toc-text\">3.1 农历(阴历)转换 LunarSolarConverter</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-2-%E5%B7%A5%E4%BD%9C%E6%97%A5%E5%8E%86-workalendar\"><span class=\"toc-text\">3.2 工作日历 workalendar</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-3-%E4%B8%AD%E5%9B%BD%E6%B3%95%E5%AE%9A%E8%8A%82%E5%81%87%E6%97%A5%E6%95%B0%E6%8D%AE-holiday-cn\"><span class=\"toc-text\">3.3 中国法定节假日数据 holiday-cn</span></a></li></ol></li></ol></li></ol>","author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Python将网页保存为图片","uid":"edab951aaea45d7f19f050136703ffc3","slug":"Python将网页保存为图片","date":"2023-08-19T07:13:54.000Z","updated":"2024-03-06T15:30:09.357Z","comments":false,"path":"api/articles/Python将网页保存为图片.json","keywords":null,"cover":"images/7753777_0_final.png","text":"Python将网页保存为图片 思路：通过selenium打开网页，然后将网页保存为图片 依赖：chrome与chromedriver基础 1. 首先官方下载chromedriverChromeDriver.com官方地址下载：https://chromedriver.com/ 需...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"python经验","slug":"python经验","count":3,"path":"api/tags/python经验.json"}],"author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}