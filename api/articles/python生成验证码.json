{"title":"python生成验证码","uid":"ca7b5e095e51c6a96b8a0a9fffa545b0","slug":"python生成验证码","date":"2024-01-30T13:58:56.000Z","updated":"2024-01-30T14:30:35.774Z","comments":false,"path":"api/articles/python生成验证码.json","keywords":null,"cover":"/images/7760650_0_final.png","content":"<h1 id=\"Python生成登录验证码\"><a href=\"#Python生成登录验证码\" class=\"headerlink\" title=\"Python生成登录验证码\"></a>Python生成登录验证码</h1><p>现在很多web应用系统都要求增加验证码来防止暴力破解，增强应用系统的安全防护能力，验证码功能基本已成了一个应用系统的必要素之一</p>\n<p>如下图验证码：</p>\n<p><img src=\"/../pimages/image-17.png\" alt=\"Alt text\"></p>\n<h2 id=\"1-生成4个随机数\"><a href=\"#1-生成4个随机数\" class=\"headerlink\" title=\"1.生成4个随机数\"></a>1.生成4个随机数</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nfrom random import randint\n\ndef random_code(length):\n    charts &#x3D; [&#39;0&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;8&#39;,\n              &#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;j&#39;, &#39;k&#39;, &#39;m&#39;, &#39;n&#39;, &#39;p&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;,\n              &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;,\n              &#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;, &#39;H&#39;, &#39;J&#39;, &#39;K&#39;, &#39;M&#39;, &#39;N&#39;, &#39;P&#39;, &#39;Q&#39;, &#39;R&#39;, &#39;S&#39;, &#39;T&#39;,\n              &#39;U&#39;, &#39;V&#39;, &#39;W&#39;, &#39;X&#39;, &#39;Y&#39;, &#39;Z&#39;]\n    chars &#x3D; &#39;&#39;\n    for i in range(length):\n        rd &#x3D; randint(0, len(charts) - 1)\n        chars +&#x3D; charts[rd]\n    return chars</code></pre>\n<p>通过指定验证码长度来生成随机验证码数（某种程度保证了随机性）</p>\n<p>另外可以看到可以生成的随机数里面包括了数字、字母（大小写），也可以根据需要比如只要数字或者只要字母</p>\n<p><strong>提醒：</strong> 如果是数字和字母混合的，最好剔除掉容易混淆的字符，比如1、l、i、I，0、O这些容易混淆的，毕竟大部分还是自己的用户在使用，用户体验也是一个很重要的部分</p>\n<h2 id=\"2-生成图片\"><a href=\"#2-生成图片\" class=\"headerlink\" title=\"2.生成图片\"></a>2.生成图片</h2><p>有了验证码的字符后，那么下一步就是需要生成图片了，毕竟图片是需要在后端生成了返回给前端（ps：以前也遇到后端生成验证码，然后让前端渲染成图片的，这验证码可能只是为了满足有这个功能吧？）</p>\n<p>生成图片，推荐一个python第三方库captcha</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">\nfrom captcha.image import ImageCaptcha\nchars &#x3D; random_code(4)     # 大部分验证码都是4位哈\nimage &#x3D; ImageCaptcha().generate_image(chars)\n</code></pre>\n\n<h2 id=\"3-返回前端\"><a href=\"#3-返回前端\" class=\"headerlink\" title=\"3. 返回前端\"></a>3. 返回前端</h2><p>生成图片后，下一步要做的就是把图片返回给前端</p>\n<p>返回前端有多种方式，可以先把图片存储后，返回个url给前端，也可以把图片直接转base64返回前端，然后前端渲染，等等</p>\n<p>这里介绍一种把图片转base64的方式</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from io import BytesIO\nimport base64\n\nfile &#x3D; BytesIO()\n# 将图像保存在内存中\nimage.save(file, format&#x3D;&#39;png&#39;)   # 图片格式\n# 使用BytesIO().getvalue()转换为字节流\nbytes &#x3D; file.getvalue()\ndata &#x3D; base64.b64encode(bytes)\n\nreturn &#123;&#39;img&#39;: str(data, encoding&#x3D;&quot;utf-8&quot;)&#125;</code></pre>\n\n<p>这样前端接收到img参数后，直接获取后渲染就可以了</p>\n<h2 id=\"4-后端处理\"><a href=\"#4-后端处理\" class=\"headerlink\" title=\"4. 后端处理\"></a>4. 后端处理</h2><p>有了验证码，也发送给前端了，那么我们还需要做的一件事情是，怎么验证</p>\n<p>后端验证的步骤：</p>\n<ol>\n<li>获取到验证码</li>\n<li>校验验证码有效性（验证两个：1.是不是我给你的，是不是你的；2.是否在有效期内）</li>\n<li>次数限制，验证码只允许验证一次，要不然还是可以暴力破解</li>\n</ol>\n<p>获取验证码好说，直接从post参数中提取就行了，那么怎么验证呢？</p>\n<ol>\n<li>是不是我给你的？是不是你的？<br>这两个问题其实是一个意思：就是你提交给我的验证码，是不是我给你的。代表两个意思：1.是我颁发的；2.是我颁发，而且是给你的，不是你从别人那里拿来的</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>一般做法是请求的时候生成的cookie里面携带的有request的标志参数，这个参数与验证码绑定了</li>\n<li>或者返回给你验证码的时候，再多给一个id，你提交的时候把id带上</li>\n</ul></blockquote>\n<ol start=\"2\">\n<li><p>是否在有效期呢？<br>验证码也是有有效期的，不是永久的， 一般会在5分钟内有效，也可以按要求调整，一般可以直接把验证码存在缓存里面，设置一个过期时间，就可以了</p>\n</li>\n<li><p>不能多次验证<br>验证码一旦提交验证后，不管成功还是失败，应该立即删除，从缓存中清除掉，保证不被重复使用</p>\n</li>\n</ol>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 这里只是一个例子，把验证码存入缓存中\ncache.set(str(key), value, timeout&#x3D;self.timeout)</code></pre>\n\n<p>剩下的验证步骤就靠请求视图里面完善了，这是一个简单的验证码过程。</p>\n","feature":false,"text":"Python生成登录验证码现在很多web应用系统都要求增加验证码来防止暴力破解，增强应用系统的安全防护能力，验证码功能基本已成了一个应用系统的必要素之一 如下图验证码： 1.生成4个随机数 from random import randint def random_code(le...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"python经验","slug":"python经验","count":1,"path":"api/categories/python经验.json"}],"tags":[{"name":"安全","slug":"安全","count":2,"path":"api/tags/安全.json"},{"name":"python经验","slug":"python经验","count":3,"path":"api/tags/python经验.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Python%E7%94%9F%E6%88%90%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E7%A0%81\"><span class=\"toc-text\">Python生成登录验证码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E7%94%9F%E6%88%904%E4%B8%AA%E9%9A%8F%E6%9C%BA%E6%95%B0\"><span class=\"toc-text\">1.生成4个随机数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E7%94%9F%E6%88%90%E5%9B%BE%E7%89%87\"><span class=\"toc-text\">2.生成图片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%BF%94%E5%9B%9E%E5%89%8D%E7%AB%AF\"><span class=\"toc-text\">3. 返回前端</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%90%8E%E7%AB%AF%E5%A4%84%E7%90%86\"><span class=\"toc-text\">4. 后端处理</span></a></li></ol></li></ol>","author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"python将整个项目的py转为so","uid":"131b7583d9015ea1c037b717572010d5","slug":"python将整个项目的py转为so","date":"2023-08-19T07:13:54.000Z","updated":"2023-08-19T11:41:17.461Z","comments":false,"path":"api/articles/python将整个项目的py转为so.json","keywords":null,"cover":"images/7753777_0_final.png","text":"将整python项目的代码中的py文件转为so [重要提醒] 执行打包的动作，不要在源文件上进行，把代码复制到打包环境后再去打包分发，否则会因为清理代码的动作，造成代码丢失 代码清理会清理&#39;.c&#39;, &#39;.py&#39;, &#39;.pyc&#39;, &...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"加密","slug":"加密","count":2,"path":"api/tags/加密.json"}],"author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"python通过将py文件转为so实现代码加密","uid":"b17cfe320b792f7a8a70851eed21c5c9","slug":"python通过将py文件转为so实现代码加密","date":"2023-08-18T16:21:34.000Z","updated":"2023-08-20T15:35:27.546Z","comments":false,"path":"api/articles/python通过将py文件转为so实现代码加密.json","keywords":null,"cover":"images/17332563_0_final.png","text":"这里介绍一种通过将 .py 代码转为.so文件来做到某种意义上的加密的方法 前提提醒： 不同的操作系统环境中转so后只能在其相同的环境内执行，无法实现跨平台可用 单个文件转so：把guaner.py文件转为so在guaner.py的同级目录下新建一个setup.py（名称可以自己...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":4,"path":"api/categories/python.json"}],"tags":[{"name":"加密","slug":"加密","count":2,"path":"api/tags/加密.json"}],"author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}