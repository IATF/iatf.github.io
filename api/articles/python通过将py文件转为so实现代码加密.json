{"title":"python通过将py文件转为so实现代码加密","uid":"b17cfe320b792f7a8a70851eed21c5c9","slug":"python通过将py文件转为so实现代码加密","date":"2023-08-18T16:21:34.000Z","updated":"2023-08-18T17:00:14.540Z","comments":false,"path":"api/articles/python通过将py文件转为so实现代码加密.json","keywords":null,"cover":"17332563_0_final.png","content":"<h2 id=\"这里介绍一种通过将-py-代码转为-so文件来做到某种意义上的加密的方法\"><a href=\"#这里介绍一种通过将-py-代码转为-so文件来做到某种意义上的加密的方法\" class=\"headerlink\" title=\"这里介绍一种通过将 .py 代码转为.so文件来做到某种意义上的加密的方法\"></a>这里介绍一种通过将 .py 代码转为.so文件来做到某种意义上的加密的方法</h2><p><strong>前提提醒：</strong> 不同的操作系统环境中转so后只能在其相同的环境内执行，无法实现跨平台可用</p>\n<h3 id=\"1-单个文件转so：把guaner-py文件转为so\"><a href=\"#1-单个文件转so：把guaner-py文件转为so\" class=\"headerlink\" title=\"1.单个文件转so：把guaner.py文件转为so\"></a>1.单个文件转<code>so：</code>把<code>guaner.py</code>文件转为<code>so</code></h3><p>在<code>guaner.py</code>的同级目录下新建一个<code>setup.py</code>（名称可以自己定义，不一定要用setup.py命名）文件，文件的内容如下：</p>\n<pre><code>from distutils.core import setup\nfrom Cython.Build import cythonize\nsetup(ext_modules = cythonize([&quot;guaner.py&quot;]))\n</code></pre>\n<p>然后执行以下命令进行转so</p>\n<pre><code>python setup.py build_ext\n</code></pre>\n<p>示例：创建完成后目录结构如下</p>\n<pre><code>.\n├── __init__.py\n├── guaner.py\n└── setup.py\n​\n0 directories, 3 files\n</code></pre>\n<p>然后执行命令开始转so</p>\n<pre><code>.\n├── __init__.py\n├── build\n│   ├── lib.macosx-10.9-x86_64-3.10\n│   │   └── test\n│   │       └── jiami\n│   │           └── guaner.cpython-310-darwin.so\n│   └── temp.macosx-10.9-x86_64-3.10\n│       └── guaner.o\n├── guaner.c\n├── guaner.py\n└── setup.py\n</code></pre>\n<p>生成的<code>so</code>文件在<code>build</code>目录下，找到<code>guaner.cpython-310-darwin.so</code>就是转<code>so</code>后的文件了</p>\n<p><strong>重点提醒：</strong> <code>__init__.py</code>文件对转<code>so</code>的影响</p>\n<h4 id=\"注意看到，为什么多了一个jiami目录？\"><a href=\"#注意看到，为什么多了一个jiami目录？\" class=\"headerlink\" title=\"注意看到，为什么多了一个jiami目录？\"></a>注意看到，为什么多了一个jiami目录？</h4><p>首先看下我完整的文件目录结构：</p>\n<pre><code>test\n├── __init__.py\n├── jiami\n│   ├── guaner.py\n│   └── setup.py\n</code></pre>\n<p>这是我完整的目录结构，里面有个很关键的文件，<code>test</code>目录下有<code>__init__.py</code>，<code>jiami</code>目录下也有<code>__init__.py</code>，在转<code>so</code>文件的时候，因为<code>python</code>代码结构中，如果目录中存在<code>__init__.py</code>，会把当前这个目录当作一个包，模块，可以被其他目录下代码引用，所以转<code>so</code>的时候，会顺着<code>__init__.py</code>所在的包结构，一层层的往上找，直到最后非<code>python</code>模块的目录为止</p>\n<p>因此打包完成后的目录结构就是这样的结构了：</p>\n<pre><code>.\n├── __init__.py\n├── build\n│   ├── lib.macosx-10.9-x86_64-3.10\n│   │   └── test\n│   │       └── jiami\n│   │           └── guaner.cpython-310-darwin.so\n│   └── temp.macosx-10.9-x86_64-3.10\n│       └── guaner.o\n├── guaner.c\n├── guaner.py\n└── setup.py\n</code></pre>\n<h4 id=\"现在去掉-init-py再打包看看结果\"><a href=\"#现在去掉-init-py再打包看看结果\" class=\"headerlink\" title=\"现在去掉__init__.py再打包看看结果\"></a>现在去掉<code>__init__.py</code>再打包看看结果</h4><pre><code>jiami\n├── guaner.py\n└── setup.py\n</code></pre>\n<p>执行<code>python setup.py build_ext</code>得到so文件目录如下</p>\n<pre><code>jiami\n├── build\n│   ├── lib.macosx-10.9-x86_64-3.10\n│   │   └── guaner.cpython-310-darwin.so\n│   └── temp.macosx-10.9-x86_64-3.10\n│       └── guaner.o\n├── guaner.c\n├── guaner.py\n└── setup.py\n</code></pre>\n<p>这样看，代码是不是就很符合自己的期望了，这样把文件<code>so</code>文件分发到相同操作系统环境后，就可以放心执行不用担心别人可以查看我们的源代码了</p>\n<h3 id=\"现在我们可以做到单个文件转位so了，那么我们是不是可以把当前的python项目整体的所有代码全部转位so文件了，这样发布给用户的时候，也不用担心看到我们的源代码了，下一章开始介绍打包整个python项目\"><a href=\"#现在我们可以做到单个文件转位so了，那么我们是不是可以把当前的python项目整体的所有代码全部转位so文件了，这样发布给用户的时候，也不用担心看到我们的源代码了，下一章开始介绍打包整个python项目\" class=\"headerlink\" title=\"现在我们可以做到单个文件转位so了，那么我们是不是可以把当前的python项目整体的所有代码全部转位so文件了，这样发布给用户的时候，也不用担心看到我们的源代码了，下一章开始介绍打包整个python项目\"></a>现在我们可以做到单个文件转位<code>so</code>了，那么我们是不是可以把当前的<code>python</code>项目整体的所有代码全部转位<code>so</code>文件了，这样发布给用户的时候，也不用担心看到我们的源代码了，下一章开始介绍打包整个<code>python</code>项目</h3>","feature":true,"text":"这里介绍一种通过将 .py 代码转为.so文件来做到某种意义上的加密的方法前提提醒： 不同的操作系统环境中转so后只能在其相同的环境内执行，无法实现跨平台可用 1.单个文件转so：把guaner.py文件转为so在guaner.py的同级目录下新建一个setup.py（名称可以自...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"python","slug":"python","count":1,"path":"api/categories/python.json"}],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%99%E9%87%8C%E4%BB%8B%E7%BB%8D%E4%B8%80%E7%A7%8D%E9%80%9A%E8%BF%87%E5%B0%86-py-%E4%BB%A3%E7%A0%81%E8%BD%AC%E4%B8%BA-so%E6%96%87%E4%BB%B6%E6%9D%A5%E5%81%9A%E5%88%B0%E6%9F%90%E7%A7%8D%E6%84%8F%E4%B9%89%E4%B8%8A%E7%9A%84%E5%8A%A0%E5%AF%86%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">这里介绍一种通过将 .py 代码转为.so文件来做到某种意义上的加密的方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%8D%95%E4%B8%AA%E6%96%87%E4%BB%B6%E8%BD%ACso%EF%BC%9A%E6%8A%8Aguaner-py%E6%96%87%E4%BB%B6%E8%BD%AC%E4%B8%BAso\"><span class=\"toc-text\">1.单个文件转so：把guaner.py文件转为so</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E7%9C%8B%E5%88%B0%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A4%9A%E4%BA%86%E4%B8%80%E4%B8%AAjiami%E7%9B%AE%E5%BD%95%EF%BC%9F\"><span class=\"toc-text\">注意看到，为什么多了一个jiami目录？</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%8E%B0%E5%9C%A8%E5%8E%BB%E6%8E%89-init-py%E5%86%8D%E6%89%93%E5%8C%85%E7%9C%8B%E7%9C%8B%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">现在去掉__init__.py再打包看看结果</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%8E%B0%E5%9C%A8%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0%E5%8D%95%E4%B8%AA%E6%96%87%E4%BB%B6%E8%BD%AC%E4%BD%8Dso%E4%BA%86%EF%BC%8C%E9%82%A3%E4%B9%88%E6%88%91%E4%BB%AC%E6%98%AF%E4%B8%8D%E6%98%AF%E5%8F%AF%E4%BB%A5%E6%8A%8A%E5%BD%93%E5%89%8D%E7%9A%84python%E9%A1%B9%E7%9B%AE%E6%95%B4%E4%BD%93%E7%9A%84%E6%89%80%E6%9C%89%E4%BB%A3%E7%A0%81%E5%85%A8%E9%83%A8%E8%BD%AC%E4%BD%8Dso%E6%96%87%E4%BB%B6%E4%BA%86%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%8F%91%E5%B8%83%E7%BB%99%E7%94%A8%E6%88%B7%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E4%B9%9F%E4%B8%8D%E7%94%A8%E6%8B%85%E5%BF%83%E7%9C%8B%E5%88%B0%E6%88%91%E4%BB%AC%E7%9A%84%E6%BA%90%E4%BB%A3%E7%A0%81%E4%BA%86%EF%BC%8C%E4%B8%8B%E4%B8%80%E7%AB%A0%E5%BC%80%E5%A7%8B%E4%BB%8B%E7%BB%8D%E6%89%93%E5%8C%85%E6%95%B4%E4%B8%AApython%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">现在我们可以做到单个文件转位so了，那么我们是不是可以把当前的python项目整体的所有代码全部转位so文件了，这样发布给用户的时候，也不用担心看到我们的源代码了，下一章开始介绍打包整个python项目</span></a></li></ol></li></ol>","author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"小铲","uid":"eb5f4bc5c6b0be6986881b7a1cd7ad24","slug":"小铲","date":"2023-07-30T14:14:54.000Z","updated":"2023-08-02T05:16:55.039Z","comments":false,"path":"api/articles/小铲.json","keywords":null,"cover":"/images/7760650_0_final.png","text":"小铲 ","link":"","photos":[],"count_time":{"symbolsCount":3,"symbolsTime":"1 mins."},"categories":[{"name":"应用","slug":"应用","count":4,"path":"api/categories/应用.json"}],"tags":[{"name":"密码本","slug":"密码本","count":4,"path":"api/tags/密码本.json"}],"author":{"name":"小禅又小禅","slug":"blog-author","avatar":"/images/7760650_0_final.png","link":"/","description":"小禅又小禅，哎哎哎呀","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}